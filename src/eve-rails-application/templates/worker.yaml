---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eve-rails-application.fullname" . }}-worker
  labels:
    {{- include "eve-rails-application.labels" . | nindent 4 }}
    app: {{ include "eve-rails-application.fullname" . }}-worker
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.rails.worker.replicaCount }}
  {{- end }}
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "eve-rails-application.fullname" . }}-worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "eve-rails-application.selectorLabels" . | nindent 8 }}
        app: {{ include "eve-rails-application.fullname" . }}-worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "eve-rails-application.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "eve-rails-application.fullname" . }}-worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bundle", "exec", "sidekiq", "-c", "{{ .Values.rails.worker.maxThreads }}", "-C", "config/sidekiq.yml"]
          env:
            - name: RACK_ENV
              value: {{ .Values.rails.environment }}
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: RAILS_ENV
              value: {{ .Values.rails.environment }}
            - name: RAILS_MAX_THREADS
              value: {{ .Values.rails.web.maxThreads | quote }}
          {{- if .Values.rails.envSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.rails.envSecret }}
          {{- end }}
          ports:
            - name: http
              containerPort: 7433
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["bin/sidekiq_quiet"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: {{ include "eve-rails-application.fullname" . }}-worker-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bundle", "exec", "rails", "db:abort_if_pending_migrations"]
          env:
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: RAILS_ENV
              value: {{ .Values.rails.environment }}
          {{- if .Values.rails.envSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.rails.envSecret }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 60
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
