apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "eve-rails-application.fullname" . }}-migrate
  labels:
    {{- include "eve-rails-application.labels" . | nindent 4 }}
    app: {{ include "eve-rails-application.fullname" . }}-migrate
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "eve-rails-application.fullname" . }}-migrate
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "eve-rails-application.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bundle", "exec", "rails", "db:migrate"]
          env:
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: RAILS_ENV
              value: {{ .Values.rails_env }}
          {{- if .Values.containerEnvSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.containerEnvSecret }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: OnFailure
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
